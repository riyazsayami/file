name: "Deploy to Server"

on:
  push:
      branches:
        - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    env:
      SERVER_IP: ${{ vars.SERVER_IP }}

    steps:
      - uses: actions/checkout@v3

      - name: "Build Docker Image"
        run: |
          docker login -u riyazmanandhar -p $DOCKERHUB_PAT
          docker build -t riyazmanandhar/nginx .
          docker push riyazmanandhar/nginx
        env:
          DOCKERHUB_PAT: ${{ secrets.DOCKERHUB_PAT }}

      - name: "Configure SSH"
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          touch ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      
      - name: "Put SSH Key in Docker file for Server Access"
        run: |
          touch pem.pem
          echo $SSH_KEY64 | base64 -d > pem.pem && chmod 400 pem.pem
          ssh-keygen -R $SERVER_IP
        env: 
          SSH_KEY64: ${{ secrets.SSH_KEY64 }}

      - name: "Docker Pull and Restart Docker"
        run: |
          ssh -t ubuntu@$SERVER_IP -i pem.pem 'docker pull riyazmanandhar/nginx'
          ssh -t ubuntu@$SERVER_IP -i pem.pem 'docker stop nginx6 && docker rm nginx6'
          ssh -t ubuntu@$SERVER_IP -i pem.pem 'docker run --name nginx6 -p 80:80 -d riyazmanandhar/nginx'